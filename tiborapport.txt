*** 13 fev ***

    J'ai créé le projet Django.
    Il est configuré pour postgre, penser à modifier "settings.py" au besoin (extrait ci-dessous). Noter le port
    inhabituel (pas 5432, déjà pris chez moi) à modifier aussi au besoin :

        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.postgresql_psycopg2',
                'NAME': 'enron_db',
                'USER': 'postgres',
                'PASSWORD': 'postgres',
                'HOST': 'localhost',
                'PORT': '5433',
                }
        }

    L'application enron_app gère pour l'instant les tables employés et adresses mail.
    Avec le script "peuplement_xml.py", un parser xml remplit ces deux tables à partir
    du fichier "employes_enron.xml".

    NOTA : le chemin vers le xml est renseigné au début de "peuplement_xml.py". Il est essentiel de le
    renseigner pour utiliser le script.

    A venir :
            - Construire la table "Message" pour les messages. Comment gérer les receveurs multiples ? Relation MtM ?
            - Construire un parser pour les fichiers mails. Quelles informations receuillir ?

*** 11 mars ***

    Pas de nouvelles depuis un moment oups. Je modifie le schéma : on n'avait pas pris en compte que certaines adresses
    mails ne sont pas à un.e employé.e en particulier, mais sont des listes de distributions par exemple.
    Avec l'ajout d'une table de jointure, on a maintenant une relation MtM Employee <-> MailAdress.
    Toutes les adresses sont associées à au moins une personne comme auparavant, mais à parfois plusieurs.
    Il n'y a pas de distinction au final entre les adresses personnelles et les adresses "liste de distribution".
    Faut-il y remédier, je ne pense pas actuellement.

    DONC modification des tables anciennes qui sont à droper, modification de peuplement_xml qui doit faire avec la
    table de jointure, modification de enron_app évidemment.

    Toujours en train d'avancer sur le mail_parser, qui se complique. Commment déterminer proprement une conversation ?
    Comment également construire la table des messages ? Besoin de faire de manière récursive pour référencer des
    messages pas encore parsés, ou bien peut-on y aller comme une brute ?

    Le mail parser en tout cas est prêt à débugger, il reste à faire une fouille du dossier maildir et d'utiliser la
    fonction mailParser sur chacun pour remplir la db.

*** 19-20-21 mars ***

Je fais des ajustements au mail parser face aux mauvaises suprises.

1 - il fallait revoir la regex/capture des receuveurs, qui ne marchait pas quand c'était du multiligne.

2 - problème avec certains mails : l'employé qui a le mail dans son dossier n'apparaît pas toujours dans
        la liste des receveurs (pas en tant que mail nominatif) parce qu'il le reçoit en tant que copropriétaire
        d'une adresse mail commune ( du genre "lespatrons@enron.com"). Mais, il y a plusieurs adresses receveurs :
        impossible de savoir à laquelle l'employé appartient ! donc malheureusement pas moyen de lier ces adresses
        non-nominatives à des employés.

3 - cas très bizarre : je tombe sur un mail (arnold john/notes inbox/67) qui n'a pas de "To" ! D'abord, je vois qu'il
    y a souvent écrit l'adresse de l'employé dont on regarde le dossier, ce n'est pas comme si elle n'apparaissait
    pas habituellement.
    Mais en fait, puisqu'ils ont plusieurs adresses, il est possible qu'on leur ait envoyé par plusieurs de leurs
    adresses. Dans ce cas, l'adresse "en cours" ne s'affiche en fait jamais. Donc il faut l'entrer automatiquement
    dans la création de l'itération message. Je pars donc de ce postulat, et je me permet de choisir une de leurs
    adresses comme receveuse. Ce qui compte c'est avant tout QUI reçoit, et pas laquelle de ses adresses.

4 - Je remarque que certaines adresses n'étaient pas référencées par le xml, par exemple johnarnold@enron.com.
    Il est évident que c'est de John Arnold qu'il s'agit, mais je ne peux pas automatiser cette reconnaissance...


!!!
    Il faut que je remplace la table employeeToMessage par la table mailadressToMessage. C'est bête de passer
    par employee, puisque certains mails ne vont pas aux employés.
!!!


En fait le XML est très peu exhaustif. Il y a encore un dossier dans maildir qui n'y est pas référencé :
phanis-s, qui appartient à Stephanie Panus, alors qu'il y a déjà un dossier panus-s.

C'est fou, vu qu'il y a 149 employee référencés et 150 mailbox, a priori il n'y a que stephanie qui pose problème.
J'ai juste rangé le dossier phanis-s dans panus-s et ça marche, "mdr" si je peux me permettre.

INQUIETUDES :

     Pas encore trouvé de quoi déterminer des conversations...

     Les mails formeront sans doute des doublons, s'ils sont envoyés à plusieurs employés, rien n'empêche
     qu'il y ait le même mail dans deux dossiers différents.


*** 8 avril ***

Plus de soucis avec les doublons, géré par javamail_id
D'après des sources internet de ges qui ont aussi travaillé avec les mêmes données, on est bon : on finit avec 517401
mails uniques, ce qui a l'air d'être correct

En testant la jointure et en regardant quelques minutes à la main si les liens sont bien faits, ça a l'air de coller.

Pour ce qui est de définir les conversations, je pense que ça se fera plutôt dans un second temps, au lieu d'être inclut
dans le script de peuplement.

Il reste le temps d'exécution du script, qui tourne plus de vingt minutes chez moi !!
Je compte l'améliorer dans les prochaines semaines, mais c'est une simple question d'optimisation.
Déjà sans doute, tronquer le "open read" pour ne prendre que l'en tête du mail. C'est possible que les regexs
continuent de chercher dans tout le mail même après avoir trouvé un match dans l'entête, ce qui voudrait dire que chaque
mail est lu beaucoup de fois.
Découper en blocs fonctions quelques étapes pourrait aussi améliorer le temps.


Ajouter dans mail_parser et dans les tables une propriété de type Interne/externe sur les messsages directement.
Beaucoup de requêtes nécessitent de faire une différence entre les messages internes externes, or c'est seulement
 inscrit dans mailadress pour le moment. Passer par la table de jointure à chaque fois rend ça affreux.
 DONC ajout d'une colonne "type" à expliquer : 1 : interne-interne, 2: interne/externe 3 : les deux.
 Le 3, c'est pour les mails envoyés/reçus à la fois par des internes "@enron" et des externes.


 Quel enfer, certains mails ont des "To : email <.machin@enron.com>"
 sachant que l'adresse y est incomplète. On se débarasse de ces mails intraitables.

Déjà il y a un prétraitement qui dégage les ces receveurs là, qui sont irrecevables
Mais aussi, je met en place une séquence nettoyage, qui dégage les addresses mails qui ne contiennent pas "@".
Il y en a 150 environ à dégager simplement

Peut-être que cette phase de nettoyage permettrait de remplacer pas mal de code pouyr accélérer le peuplement,
mais il n'y a pas le temps de s'y coller et je ne suis pas sûr que ça soit si important. C'est quand même moins propre
comme méthode que celle consistant à faire des meilleures regex etc..

